# ref: http://blog.crowdint.com/2013/05/17/android-builds-on-travis-ci-with-maven.html
# ref: http://blog.crowdint.com/2013/05/24/android-builds-on-travis-ci-with-gradle.html
# with some modifications to support Android 4.3

language: java
jdk: oraclejdk7
env:
 matrix:
   # android-17 is always included
   ## note: we're using android-17 for building, so android-16 env is disabled here.
   # - ANDROID_SDKS=sysimg-16           ANDROID_TARGET=android-16  ANDROID_ABI=armeabi-v7a
   - ANDROID_SDKS=android-17,sysimg-17 ANDROID_TARGET=android-17  ANDROID_ABI=armeabi-v7a
   - ANDROID_SDKS=android-18,sysimg-18 ANDROID_TARGET=android-18  ANDROID_ABI=armeabi-v7a

before_install:
  # Install base Android SDK
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch > /dev/null; fi
  - wget http://dl.google.com/android/android-sdk_r22.2.1-linux.tgz
  - tar xzf android-sdk_r22.2.1-linux.tgz
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Install required components.
  # For a full list, run `android list sdk -a --extended`
  # Note that sysimg-16 downloads the ARM, x86 and MIPS images (we should optimize this).
  # Other relevant API's:
  #  addon-google_apis-google-16
  # yes, we do agree SDK EULA
  - echo 'y' | android update sdk --filter platform-tools,android-17,extra-android-support,$ANDROID_SDKS --no-ui --force
  - BUILD_TOOLS_ID=`android list sdk --extended -a | grep "build-tools-18.1.0" |cut -d ' ' -f 2`
  - echo 'y' | android update sdk -a --filter $BUILD_TOOLS_ID --no-ui --force
  - export PATH=${PATH}:${ANDROID_HOME}/build-tools/18.1.0

## disable emulator related things for now
#   # Create and start emulator
#   - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
#   - emulator -avd test -no-skin -no-audio -no-window &

## disable emulator related things for now
# before_script:
#   - chmod +x wait_for_emulator
#   - ./wait_for_emulator

  # NDK
  - wget http://dl.google.com/android/ndk/android-ndk-r9-linux-x86_64.tar.bz2
  - tar jxf android-ndk-r9-linux-x86_64.tar.bz2
  - export ANDROID_NDK_ROOT=$PWD/android-ndk-r9
  - export PATH=$ANDROID_NDK_ROOT:$PATH

# Android NDK & SDK build
script: ./Engine/porting/Android/GameEngine-android/build.py --rebuild --assemble --project SampleProject
